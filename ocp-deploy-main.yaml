---
- hosts: localhost
  tags: bastion
  vars:
  roles:
    - bastion

- hosts: localhost
  tasks:
  - name: refresh-inventory
    meta: refresh_inventory

- hosts: nodes
  become: true
  vars:
    guid: "{{ hostvars['localhost']['guid'].stdout }}"
  roles:
    - systems
    - docker

- hosts: nfs
  become: true
  roles:
    - { role: nfs,
        tags: ['export_nfs'] }

#- name: Execute the openshift-ansible prerequisites
#  import_playbook: /usr/share/ansible/openshift-ansible/playbooks/prerequisites.yml

#- name: Execute the openshift-ansible Deployer
#  import_playbook: /usr/share/ansible/openshift-ansible/playbooks/deploy_cluster.yml

- name: collect-kube-creds-from-master
  hosts: masters[0]
  tasks:
    - name: retrieve-the-kube-directory-from-a-master-to-bastion
      fetch:
        src: /root/.kube/config
        dest: /root/.kube/config
        flat: yes

- name: validate-kube-config-auth
  hosts: localhost
  tags: test-auth
  tasks:
    - name: check-system-admin
      shell: oc whoami | grep system:admin
      register: whoami
    - name: echo-result
      shell: 'echo Congratulations you have become the "{{ whoami.stdout }}"'
      register: out
      when: whoami.stdout.find('admin') != -1
    - debug: 
        msg: "{{ out.stdout }}"
    - fail:
        msg: "you are not system:admin"
      when: whoami.stdout.find('system:admin') == -1

- name: create-pvs-definition-files-on-bastion
  hosts: localhost
  vars:
    guid: "{{ hostvars['localhost']['guid'].stdout }}"
  tags: create-defs
  tasks:
    - name: create-25-5GB-pvs-definition-files
      script: scripts/pvs_5Gsize.sh "{{ guid.stdout }}"
      args:
        creates: /root/pvs/pv1
    - name: create-25-10GB-pvs-definition-files
      script: scripts/pvs_10Gsize.sh "{{ guid.stdout }}"
      args:
        creates: /root/pvs/pv26

- hosts: nfs
  become: true
  roles:
    - { role: nfs,
        tags: ['create_pvs', 'restart_nfs'] }

# In Ansible 2.5 you can use the openshift_raw module to achieve this result, negating need to create definition files as well        
- name: create-pvs-from-definitions
  hosts: localhost
  tags: pvs-oc-create
  tasks:
    - name: oc-create
      shell: cat /root/pvs/* | oc create -f -

- name: docker-pull-recycler-images
  hosts: nodes
  tags: recycler-images
  tasks:
    - name: pull-docker-images-for-recycler
      docker_image:
        name: registry.access.redhat.com/openshift3/ose-recycler:latest
        repository: registry.access.redhat.com/openshift3/ose-recycler:v3.9.30  # This is the equivalent of "docker tag"

# Secure the projects with default network policies
- name: secure-projects-with-network-policies
  hosts: localhost
  tags: create-secure-project-template
  tasks:
    - name: oc-create-new-project-template
      shell: oc create -f templates/default-bootstrap-template-customised.yaml -n default
      ignore_errors: true

- name: update-the-master-config-yaml-file
  hosts: masters
  tags: secure-projects      
  tasks:
    - name: update-masters-master-yaml
      shell: >
        sed -i -e 's/projectRequestTemplate: \x27\x27/projectRequestTemplate: \x27default\/project-request\x27/g' /etc/origin/master/master-config.yaml
      args:
        warn: false
    - name: inspect-change
      shell: cat /etc/origin/master/master-config.yaml | grep projectRequestTemplate
      register: returned_master_config
    - debug:
        msg: "{{ returned_master_config.stdout }}"
    - name: restart-masters-api
      shell: systemctl restart atomic-openshift-master-api

# Need to merge the smoke-test repo into this one for the homework
- import_playbook: ../ocp-oa-nodejs-mongo-persistent/apply.yml


# Run the smoke-test app with openshift-applier
#- name: Jenkins Setup
#  hosts: localhost
#  tasks:
#    - name: jenkins setup
#      script: ???        